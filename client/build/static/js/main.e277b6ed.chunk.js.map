{"version":3,"sources":["components/Footer.js","components/Expand.js","components/DisplayData.js","components/GetData.js","components/SearchTool.js","Redux/actions.js","components/Header.js","components/SearchBar.js","components/LandingPage.js","App.js","Redux/reducers.js","index.js"],"names":["Footer","className","Component","Expand","DisplayData","props","items","useState","DisplayPhoto","item","process","DisplayName","itemName","includes","filter","letter","join","useEffect","i","length","console","log","mapItems","Container","Item","Group","map","Image","size","src","wrapped","ui","Content","Header","name","Meta","Icon","Description","Label","age","gender","getColor","breeds","primary","dataTime","published_at","Date","getFullYear","getToday","year","month","getUTCMonth","past","pastYear","pastMonth","monthDiff","getTimeDiff","Extra","tags","speices","push","attribute","tag","href","GetData","token","state","error","isLoaded","store","subscribe","updateData","petState","getState","this","setState","petData","React","domain","SearchTool","contextRef","createRef","handleToggle","prevState","active","empty","petType","page","location","sort","coat","good_with_children","good_with_dogs","good_with_cats","input","hasError","limit","totalPageCount","currentPage","isloading","loadingMessage","fetch","body","headers","method","response","json","jsonResponse","access_token","param","params","type","queryString","bearer","withCredentials","Authorization","res","jsonRes","animals","dispatch","changePetData","pagination","total_pages","current_page","getToken","requestData","val","newVal","e","target","value","onSubmitSearchCity","preventDefault","data","activePage","isLoading","Grid","Column","columns","Ref","innerRef","Sticky","Pagination","onPageChange","test","defaultActivePage","totalPages","Rail","Segment","Form","onSubmit","bind","Field","Input","placeholder","onChange","onChangeSearchCity","icon","inverted","circular","link","onClick","ToggleButtonGroup","handleChange","ToggleButton","variant","Or","ButtonToolbar","handleChangePetAge","handleChangeCats","handleChangeDogs","handleChangeChildren","handleChangePetCoat","role","SearchBar","Navbar","s","Brand","Nav","Link","Popup","trigger","content","on","LandingPage","style","background","App","initialState","vistorCount","petAge","petEnvoriment","petReducer","action","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e277b6ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'semantic-ui-react'\n\n// const ageOptions = [\n//     { key: 'baby', text: 'Baby', value: 'baby' },\n//     { key: 'young', text: 'Young', value: 'young' },\n//     { key: 'adult', text: 'Adult', value: 'adult' },\n//     { key: 'Senior', text: 'Senior', value: 'senior' },\n\n\n// ]\n// export function DropdownExampleMultipleSelection() {\n//     return (<Dropdown placeholder='Age' fluid multiple selection options={ageOptions} />)\n// }\nclass Footer extends Component {\n\n\n\n\n\n    render() {\n        return (\n            <footer className=\"footer\">\n\n                {/* {DropdownExampleMultipleSelection()} */}\n\n            </footer>\n        )\n    }\n}\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ButtonToolbar, Button, ToggleButton, Collapse, ToggleButtonGroup, Container } from 'react-bootstrap/'\nimport { useState } from 'react';\n\nfunction Expand() {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <Container>\n            <Button\n                variant=\"secondary\" size=\"lg\"\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n            >\n                More\n            </Button>\n            <Collapse in={open}>\n                <div>\n                    Age\n                    {/* <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\">\n                            <ToggleButton value={'baby'}>baby</ToggleButton>\n                            <ToggleButton value={'young'}>young </ToggleButton>\n                            <ToggleButton value={'adult'}>adult</ToggleButton>\n                            <ToggleButton value={'senior'}>Senior</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar> */}\n                    Coat\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\" >\n                            <ToggleButton value={1}>Hairless</ToggleButton>\n                            <ToggleButton value={2}>Short </ToggleButton>\n                            <ToggleButton value={3}>Long</ToggleButton>\n                            <ToggleButton value={4}>Wire</ToggleButton>\n                            <ToggleButton value={4}>Curly</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                    Good with\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\" >\n                            <ToggleButton value={1}>Children</ToggleButton>\n                            <ToggleButton value={2}>Dogs</ToggleButton>\n                            <ToggleButton value={3}>Cats</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                </div>\n            </Collapse>\n        </Container>\n    );\n}\n\nexport default Expand;","import React, { useEffect, useState } from 'react'\nimport GetData from './GetData'\nimport { Item } from 'semantic-ui-react'\nimport { Icon, Label } from 'semantic-ui-react'\nimport { Button, Pagination } from 'semantic-ui-react'\nimport { Container, Row, Col } from 'react-bootstrap';\n\n// import { Image, Card, Icon } from 'semantic-ui-react'\n\n// import { Container, Row, Col } from 'react-bootstrap';\n\n// use react library 'card' to display each pet's breed, age, photo, \nfunction DisplayData(props) {\n    const { items } = props\n    const [photo, setPhoto] = useState([])\n\n    function DisplayPhoto(item) {\n        let dogPhoto = process.env.PUBLIC_URL + \"/imgs/goofyDog.jpeg\"\n        let catPhoto = process.env.PUBLIC_URL + \"/imgs/cat2.jpeg\"\n        let randoPhoto = process.env.PUBLIC_URL + \"/imgs/smilingDog.jpeg\"\n        if (item['photos'][0]) {\n            if (item['photos'][0]['full'] !== null) {\n                return item['photos'][0]['full']\n            }\n        } else {\n            if (item['species'] === 'Cat') {\n                return catPhoto\n            } else if (item['species'] === 'Dog') {\n                return dogPhoto\n            } else {\n                return randoPhoto\n            }\n\n        }\n    }\n    function DisplayName(itemName) {\n        if (itemName) {\n            if (itemName.includes('*')) {\n                let nameArr = [...itemName]\n                let newName = nameArr.filter((letter) => {\n                    if (letter === '*') {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n                return newName.join('')\n            } else {\n                return itemName\n            }\n        } else {\n            return itemName = 'This fur baby does not have a name yet'\n        }\n    }\n    function makeid(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n    //cats children \n    function tag(item) {\n        let tags = []\n        for (let speices in item['environment']) {\n\n            if (item['environment'][speices] !== null) {\n                if (item['environment'][speices] === true) {\n                    tags.push(<Label> {speices} friendly</Label>)\n                }\n            }\n        }\n        for (let attribute in item['attributes']) {\n            if (item['attributes'][attribute] !== null) {\n                if (item['attributes'][attribute] === true) {\n                    tags.push(<Label> {attribute} </Label>)\n                }\n            }\n        }\n        return tags\n\n    }\n    // function description(description) {\n    //     let str = '!@#$%^&*()?><./;{}|'\n    //     if (description.includes(...str)) {\n\n    //     }\n    // }\n\n    function getTimeDiff(dataTime) {\n        // let validMonth=false\n        //format= NOW year - Past Year    AND Now Month-Past Month +1 \n        let getToday = new Date()\n        let year = getToday.getFullYear() //return present year\n        // console.log(year, 'year')\n        let month = getToday.getUTCMonth(); //return present month \n        // console.log(month + 1, 'month')\n\n        let past = new Date(dataTime)\n        let pastYear = past.getFullYear()\n        let pastMonth = past.getUTCMonth()\n        if (month < pastMonth) {\n\n        }\n        let yearDiff = year - pastYear\n        let monthDiff = month - pastMonth + 1\n        if (monthDiff < 0) {\n            monthDiff *= -1\n        }\n\n        let result = yearDiff + ' Year and ' + monthDiff + ' Months'\n        return result\n\n    }\n\n    function getYear(dataTime) {\n        let d = new Date(dataTime)\n        return d.getFullYear()\n    }\n    useEffect(() => {\n\n        function mapItems() {\n            for (let i = 0; i < items.length; i++) {\n                let item = items[i]\n                console.log(item, '_______', item['photos'], item['photos'][0], 'lookie')\n\n\n            }\n        }\n        // console.log(DisplayName('**karen'))\n        mapItems()\n    }, [items])\n    // {\n    //     items.map(item => (\n    //         <li key={makeid(5)}>\n    //             {DisplayName(item.name)}: {item.type} | {item.breeds.primary}|\n    //             <Image src={DisplayPhoto(item)} size='small' circular />\n    //         </li>\n    //     ))\n    // }\n    function getColor(item) {\n        if (item['colors'] !== null) {\n            if (item['colors'][['primary']]) {\n                return item['colors']['primary']\n            }\n\n        } else {\n            return null\n        }\n    }\n    return (\n        <Container>\n            <Item.Group>\n                {items.map((item) => (\n                    <Item className=\"columnBox\">\n                        <Item.Image className=\"crop\" size='medium' src={DisplayPhoto(item)} wrapped ui={false} />\n                        <Item.Content>\n                            <Item.Header>{DisplayName(item.name)} </Item.Header>\n                            <Item.Meta>\n                                <Icon name='mail' />  {item['contact']['email']}\n                                <Icon name='phone' /> {item['contact']['phone']} </Item.Meta>\n                            <Item.Description>\n                                <Label>  <strong> Age:</strong> {item.age} </Label>\n                                <Label><strong> Gender: </strong>  {item.gender}</Label>\n                                <Label><strong>  Size: </strong>   {item.size}</Label>\n\n                                <br /> <div> {DisplayName(item.name)} is a {getColor(item)} {item.breeds.primary},our fury friend was admitted to the shelter since {getYear(item.published_at)} and has been in the shelter for {getTimeDiff(item.published_at)}\n                                </div>\n                            </Item.Description>\n                            <Item.Extra>  {tag(item)}</Item.Extra>\n                        </Item.Content>\n                        <Button className=\"detailsbtn\" href={item['url']}> Click for more details </Button>\n                    </Item>\n                ))}\n            </Item.Group>\n            {/* {items.map(item => (\n                <li key={makeid(5)}>\n                    {DisplayName(item.name)}: {item.type} | {item.breeds.primary}|\n                    <Image src={DisplayPhoto(item)} size='small' circular />\n                </li>\n            ))} */}\n            {/* {console.log(items, 'props')} */}\n        </Container>\n    )\n\n}\nexport default DisplayData;","import React from 'react'\nimport { store } from '../index'\nimport { Image } from 'semantic-ui-react'\nimport DisplayData from './DisplayData'\nimport Header from './Header'\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react'\n\n\nclass GetData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.token = '';\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n        store.subscribe(() => this.updateData())\n    }\n\n    updateData() {\n        const petState = store.getState()\n        this.setState({\n            items: petState.petData\n        })\n\n    }\n\n    render() {\n        let { isLoaded } = this.props;\n        let { items } = this.state;\n\n        items = items || [];\n\n        isLoaded = true;\n        if (!isLoaded) {\n            return (<h1>Loading...</h1>)\n        } else {\n            return (\n                <div className=\"dataBox\">\n                    <DisplayData items={items} />\n                </div>\n            );\n        }\n    }\n}\nexport default GetData; ","import React, { createRef, Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n// import { Form, FormControl } from 'react-bootstrap'\nimport { ButtonToolbar, ToggleButton, ToggleButtonGroup } from 'react-bootstrap/'\nimport Expand from './Expand.js';\nimport GetData from './GetData.js';\nimport { boundChangePetData, boundChangePetAge, boundChangePetEnvoriment } from '../Redux/actions'\nimport DisplayData from './DisplayData.js';\nimport { Icon, Input, Button, Form, Pagination } from 'semantic-ui-react'\nimport {\n    Grid,\n    Rail,\n    Ref,\n    Segment,\n    Sticky,\n} from 'semantic-ui-react';\n\n\nconst domain = \"https://api.petfinder.com\";\nconst tokenUrl = '/v2/oauth2/token';\nconst url = `/v2/animals`;\n\nclass SearchTool extends Component {\n    contextRef = createRef()\n    constructor() {\n        super()\n        this.state = {\n            empty: '',\n            active: true,\n            petType: 'Dog',\n            page: 1,\n            location: '94112',\n            sort: '-recent',\n            coat: '',\n            age: '',\n            good_with_children: '',\n            good_with_dogs: '',\n            good_with_cats: '',\n            input: '',\n            hasError: false,\n            limit: '20',\n            totalPageCount: '',\n            currentPage: '',\n            isloading: null,\n            loadingMessage: 'loading...'\n\n        }\n    }\n\n    handleToggle = () =>\n        this.setState((prevState) => ({ active: !prevState.active }))\n\n    async getToken() {\n        const response = await fetch(`${domain}${tokenUrl}`, {\n            body: \"grant_type=client_credentials&client_id=cx1Q1hP2mvR6jeG447cARka8URjwpWlyn6myKedV3w6ap3qy0v&client_secret=S0dclp9P1odBVYNRx9MrotL78XE0tAU4L57YCYH2\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            method: 'POST'\n        });\n        const jsonResponse = await response.json();\n        this.token = jsonResponse.access_token;\n    }\n\n    async requestData() {\n        const params = {\n            type: this.state.petType,\n            page: this.state.page,\n            totalPageCount: this.state.totalPageCount,\n            location: this.state.location,\n            sort: this.state.sort,\n            age: this.state.age,\n            good_with_children: this.state.good_with_children,\n            good_with_dogs: this.state.good_with_dogs,\n            good_with_cats: this.state.good_with_cats,\n            coat: this.state.coat,\n            limit: this.state.limit\n        }\n        let queryString = ''\n        for (let param in params) {\n            if (params[param] !== '') {\n                queryString += (param + '=' + params[param] + '&')\n            }\n        }\n        const bearer = `Bearer ${this.token}`;\n        try {\n            //teach string interpolation \n            const res = await fetch(domain + url + '?' + queryString, {\n                withCredentials: true,\n                headers: {\n                    Authorization: bearer,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const jsonRes = await res.json();\n\n            this.setState({\n                isLoaded: true,\n                items: jsonRes.animals\n            });\n\n            boundChangePetData(jsonRes.animals)\n            if (!jsonRes.animals.length) {\n                console.log('empty page')\n                this.setState({\n                    empty: 'Sorry! Looks like we ran out of furries in your area, Please check back for new furry updates!'\n                })\n            }\n            if (jsonRes.pagination) {\n                this.setState({\n                    totalPageCount: jsonRes.pagination.total_pages,\n                    currentPage: jsonRes.pagination.current_page,\n                })\n            }\n            console.log(jsonRes, 'response', jsonRes.pagination, this.state.totalPageCount, this.state.currentPage)\n\n            // boundChangePetAge(jsonRes.animals)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    async componentDidMount() {\n        console.log('did u happen')\n        await this.getToken()\n        await this.requestData();\n    }\n\n    async handleChange(val) {\n        this.setState({\n            petType: val\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n    async handleChangePetAge(val) {\n\n        let newVal = this.state.age\n        if (this.state.age !== '') {\n            newVal = this.state.age + ',' + val\n        } else {\n            newVal = val\n        }\n        this.setState({\n            age: newVal,\n            isloading: true\n        });\n        await this.getToken();\n        await this.requestData();\n        this.setState({\n            isloading: false\n        })\n    }\n    async handleChangePetCoat(val) {\n        let newVal = this.state.coat\n        if (this.state.age !== '') {\n            newVal = this.state.coat + ' ,' + val\n        } else {\n            newVal = val\n        }\n\n        this.setState({\n            coat: newVal\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n\n    async handleChangeCats(val) {\n        if (this.state.good_with_cats === '') {\n            this.setState({\n                good_with_cats: true\n\n            });\n        }\n        if (this.state.good_with_cats === true) {\n            this.setState({\n                good_with_cats: false\n            });\n        }\n        if (this.state.good_with_cats === false) {\n            this.setState({\n                good_with_cats: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n\n        await this.getToken();\n        await this.requestData();\n    }\n    async handleChangeDogs(val) {\n\n        if (this.state.good_with_dogs === true) {\n            this.setState({\n                good_with_dogs: false\n            });\n        }\n        if (this.state.good_with_dogs === false) {\n            this.setState({\n                good_with_dogs: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n            console.log('did u happen')\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n        await this.getToken();\n        await this.requestData();\n    }\n    async handleChangeChildren(val) {\n\n        if (this.state.good_with_children === true) {\n            this.setState({\n                good_with_children: false\n            });\n        }\n        if (this.state.good_with_children === false) {\n            this.setState({\n                good_with_children: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n        await this.getToken();\n        await this.requestData();\n    }\n    async onClickPageNext() {\n\n        this.setState({\n            page: this.state.page += 1,\n            isloading: true\n        });\n        console.log(this.state.page, 'page')\n        await this.getToken();\n        await this.requestData();\n        this.setState({\n            page: this.state.page += 1,\n            isloading: false\n        });\n\n    }\n    async onClickPagePrev() {\n        if (this.state.page === 1) {\n            console.log('first Page')\n            return\n        }\n        this.setState({\n            page: this.state.page -= 1\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n    onChangeSearchCity(e) {\n        console.log(e.target.value, 'look at me')\n        this.setState({\n            input: e.target.value\n\n        })\n        if (this.onSubmitSearchCity) {\n            e.target.value = ''\n        }\n    }\n    async onSubmitSearchCity(e, input) {\n        console.log(e, 'clicked')\n        e.preventDefault()\n\n        this.setState({\n            location: this.state.input,\n\n        })\n        this.setState({\n            input: ''\n        })\n        await this.getToken();\n        await this.requestData();\n\n    }\n\n    async test(e, data) {\n        console.log('____my data', data)\n        this.setState({\n            isloading: true,\n            page: data.activePage\n        })\n        await this.getToken();\n        await this.requestData();\n        this.setState({\n            isloading: false,\n        })\n    }\n    isLoading() {\n        if (this.state.isloading) {\n            return this.state.loadingMessage\n        }\n    }\n    // pagination() {\n    //     if (this.state.isLoaded) {\n    //         console.log('hiii')\n    //         return (<div>loaded </div>)\n    //     }\n    // }\n    render() {\n        // const { active } = this.state\n\n        // if (this.state.hasError === true) {\n        //     return <div> fak </div>\n        // }\n        if (this.state.isLoading === true) {\n            return <div> loading....</div>\n        }\n\n\n        return (\n            <Container className=\"dataBox\">\n\n                <Grid >\n                    <Grid.Column columns={2}>\n                        <Ref innerRef={this.contextRef}>\n                            <Container className=\"databox\">\n                                {/* <Segment position='right'> 'data goes here' */}\n                                <Container className=\"displayData mt-auto p-2\">\n                                    <Sticky className=\"stickyDirectionBar d-flex justfiy-content-center\" >\n                                        <Pagination onPageChange={((e, data) => this.test(e, data))} defaultActivePage={this.state.page} totalPages={this.state.totalPageCount} />\n                                        {/* <Button className=\"directionbtn d-flex justify-content-start\" variant=\"warning\" offset='200' onClick={this.onClickPagePrev.bind(this)}> <Icon name='left arrow' /> Prev  </Button>\n                                            <Button className=\"directionbtn d-flex justify-content-end\" variant=\"warning\" onClick={this.onClickPageNext.bind(this)}> Next<Icon name='right arrow' /></Button> */}\n                                    </Sticky>\n                                    <div>  {this.state.empty} </div>\n                                    <GetData className=\"dataBox displayData mt-auto p-2\" items={this.state.items} isLoaded={this.state.isLoaded}>\n                                    </GetData>\n                                    {/* <h1> {this.state.loadingMessage}</h1> */}\n                                </Container>\n                                <Rail >\n                                    <Sticky className=\"stickySearchBar\" >\n                                        <Segment className=\"positionSticky\">\n                                            <div> </div>\n                                            <Form onSubmit={this.onSubmitSearchCity.bind(this)}>\n                                                <Form.Field type=\"submit\">\n                                                    Zip code\n                                                    <Input\n                                                        placeholder='94112....'\n                                                        onChange={this.onChangeSearchCity.bind(this)}\n                                                        icon={<Icon name='search' inverted circular link onClick={this.onSubmitSearchCity.bind(this)} />}\n                                                    />\n                                                </Form.Field>\n                                            </Form>\n                                            <div> Pick your favorite furry </div>\n                                            <Button.Group>\n                                                <ToggleButtonGroup type=\"radio\" name=\"options\" onChange={this.handleChange.bind(this)}>\n                                                    <div> Species </div>\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'dog'}>Dog</ToggleButton>\n                                                    <Button.Or />\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'cat'}>Cat</ToggleButton>\n                                                    <Button.Or />\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'rabbit'}>Rabbit</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </Button.Group>\n                                            <div> Age </div>\n                                            <ButtonToolbar className=\"m-1\">\n                                                <ToggleButtonGroup type=\"checkbox\" onChange={this.handleChangePetAge.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'baby'}>baby</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'young'}>young </ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'adult'}>adult</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'senior'}>Senior</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            <div> Environment</div>\n                                            <ButtonToolbar className=\"m-1\">\n                                                <Button.Group type=\"checkbox\" >\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeCats.bind(this)} value={'good_with_cats'}>cats</Button>\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeDogs.bind(this)} value={'good_with_dogs'}>dogs </Button>\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeChildren.bind(this)} value={'good_with_children'}>children</Button>\n                                                </Button.Group>\n                                            </ButtonToolbar>\n                                            <div> Coat length</div>\n                                            {/* <Container className=''> */}\n                                            <ButtonToolbar className=\" m-1\">\n                                                <ToggleButtonGroup className='wrapper' type=\"checkbox\" onChange={this.handleChangePetCoat.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'short'}>short</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'medium'}>medium </ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'long'}>long</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            <div> Coat type</div>\n                                            <ButtonToolbar className=\" m-1\">\n                                                <ToggleButtonGroup className='wrapper' type=\"checkbox\" onChange={this.handleChangePetCoat.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'wire'}>wire</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'hairless'}>hairless</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'curly'}>curly</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            {/* </Container> */}\n                                            {/* <Checkbox\n                                                    checked={active}\n                                                    label='Activate Sticky on right'\n                                                    onChange={this.handleToggle}\n                                                    toggle\n                                                /> */}\n                                        </Segment>\n                                    </Sticky>\n                                </Rail>\n                            </Container>\n                        </Ref>\n                    </Grid.Column>\n                </Grid>\n            </Container >\n        )\n    }\n}\nexport default SearchTool;","import { store } from '../index'\nimport { checkPropTypes } from 'prop-types';\n\n\n\nexport const type = 'PET_TYPE';\n\n//PETTYPE\n\nexport const changePetType = petType => ({\n    type: 'PET_TYPE',\n    petType,\n\n})\n\n\nexport const boundChangePetType = type => store.dispatch(changePetType(type))\n\n//PetData\n\nexport const changePetData = petData => ({\n    type: \"PET_DATA\",\n    petData\n})\n\nexport const boundChangePetData = petData =>\n    store.dispatch(changePetData(petData))\n\n//pet Age\nexport const changePetAge = petAge => ({\n    type: 'PET_AGE',\n    petAge,\n})\n\n\nexport const boundChangePetAge = petAge =>\n    store.dispatch(changePetAge(petAge))\n\n//envorinment \n\nexport const changePetEnvoriment = petEnvoriment => ({\n    type: 'PET_ENVIRONMENT',\n    petEnvoriment,\n})\n\nexport const boundChangePetEnvoriment = petEnvoriment =>\n    store.dispatch(changePetAge(petEnvoriment))\n\n\n\n\n\nexport const increaseCounter = () => ({\n    type: 'VISTOR_COUNT',\n})\n\n\n// export const boundCounter = () =>\n//     store.dispatch(increaseCounter())\n\n\n\n// export function boundChangePetType(type) {\n//     return { type: 'PET_TYPE' }\n// }\n\n\n\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SearchTool from './SearchTool.js';\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\n\n\n\n\nfunction Header() {\n    // const { items } = props\n    return (\n        <main role=\"main\" className=\"header h-100 landing Aligner\"\n\n        // `url(\"${process.env.PUBLIC_URL + '/imgs/Home.png'}\") no-repeat center / cover `\n        >\n            <SearchTool />\n\n        </main>\n\n    )\n}\n\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Container } from 'semantic-ui-react';\nimport { Button, Popup } from 'semantic-ui-react'\n\nclass SearchBar extends Component {\n\n\n    render() {\n        return (\n            <Container>\n                <Navbar className=\"navbar-default container d-flex flex-column flex-md-row justify-content-end\" s variant=\"dark\">\n                    {/* <img\n                        src={process.env.PUBLIC_URL + \"/imgs/logo2.png\"}\n                        className=\"logo\"\n                        width=\"55\"\n                        height=\"65\"\n                        alt=\"logo\"\n\n                    /> */}\n                    <Navbar.Brand className=\"background labelFont d-flex flex-column justify-content-start\"\n                    >Project Crateless</Navbar.Brand>\n                    <Nav className=\"navbar-collapse collapse justify-content-end\">\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#home\">Adopt</Nav.Link>\n\n                        <Popup\n                            trigger={<Nav.Link className=\"nav-link nav-font\" content='Foster' > Foster </Nav.Link>}\n                            on='hover'\n                            content=\"Coming soon!\"\n\n                        />\n                        <Popup\n                            trigger={<Nav.Link className=\"nav-link nav-font\" content='Foster' > News </Nav.Link>}\n                            on='hover'\n                            content=\"Coming soon!\"\n                        />\n\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#about\">About</Nav.Link>\n                    </Nav>\n                </Navbar>\n            </Container >\n\n        )\n    }\n\n}\nexport default SearchBar;","import React from 'react'\nimport { Container } from 'react-bootstrap/'\n\n\nexport default function LandingPage() {\n\n\n    return (\n        <hero>\n            <Container className=\"landing Aligner position-relative overflow-hidden text-center bg-light \" style={{\n                background: `url(\"${process.env.PUBLIC_URL + '/imgs/landing.png'}\") no-repeat center / cover `\n            }}>\n                <p className=\"Aligner-item col-md-8 col-lg-7\"  >\n                    Saving one pet won’t change the world,\n                    </p>  <p className=\"Aligner-item right row justify-content-center align-items-cente col-md-8\" >\n                    but for that one pet the world will change forever...\n                </p>\n                {/* <button className=\"w-50 heroBtn\"  > You can make their world a better place </button> */}\n            </Container>\n        </hero >\n    )\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport Footer from './components/Footer.js'\nimport Header from './components/Header.js'\nimport SearchBar from './components/SearchBar.js'\nimport LandingPage from './components/LandingPage';\n// import 'semantic-ui-css/semantic.min.css'\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <SearchBar />\n                <LandingPage />\n                <Header />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","\nconst initialState = {\n    petType: 'dog',\n    petData: [],\n    vistorCount: 0,\n    petAge: '',\n    petEnvoriment: ''\n}\n\n\n\n\nconst petReducer = (state, action) => {\n    if (typeof state === 'undefined') {\n        return initialState\n    }\n    switch (action.type) {\n        case 'PET_TYPE':\n            return {\n                ...state,\n                petType: action.petType\n            }\n        case 'PET_DATA':\n            return {\n                ...state,\n                petData: action.petData\n            }\n        case 'PET_AGE':\n            return {\n                ...state,\n                petAge: action.petAge\n            }\n        case 'PET_ENVIRONMENT':\n            return {\n                ...state,\n                petEnvoriment: action.petEnvoriment\n            }\n        case 'VISTOR_COUNT':\n            return {\n                ...state,\n                vistorCount: state.vistorCount + 1\n            }\n        default:\n            return state\n    }\n}\n\nexport default petReducer\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { changePetType, togglePetType, boundChangePetType } from './Redux/actions'\nimport petReducer from './Redux/reducers'\n\n\nexport const store = createStore(petReducer)\n\nconsole.log(store.getState())\n\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\n\n// store.getState()\n\n// unsubscribe()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}
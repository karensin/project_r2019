{"version":3,"sources":["components/Footer.js","components/Expand.js","components/DisplayData.js","components/GetData.js","components/SearchTool.js","Redux/actions.js","components/Header.js","components/SearchBar.js","components/LandingPage.js","App.js","Redux/reducers.js","index.js"],"names":["Footer","className","Component","Expand","DisplayData","props","items","useState","DisplayPhoto","item","process","DisplayName","itemName","includes","filter","letter","join","useEffect","i","length","console","log","mapItems","Container","Item","Group","map","Image","size","src","wrapped","ui","Content","Header","name","Meta","Icon","Description","Label","age","gender","getColor","breeds","primary","dataTime","published_at","Date","getFullYear","getToday","year","month","getUTCMonth","past","pastYear","pastMonth","monthDiff","getTimeDiff","Extra","tags","speices","push","attribute","tag","href","GetData","token","state","error","isLoaded","store","subscribe","updateData","petState","getState","this","setState","petData","React","domain","SearchTool","contextRef","createRef","handleToggle","prevState","active","empty","petType","page","location","sort","coat","good_with_children","good_with_dogs","good_with_cats","input","hasError","limit","fetch","body","headers","method","response","json","jsonResponse","access_token","param","params","type","queryString","bearer","withCredentials","Authorization","res","jsonRes","animals","dispatch","changePetData","val","getToken","requestData","newVal","e","target","value","onSubmitSearchCity","preventDefault","h-100","Grid","Column","columns","Ref","innerRef","Sticky","Row","variant","offset","onClick","onClickPagePrev","bind","onClickPageNext","Rail","Segment","Form","onSubmit","Field","Input","placeholder","onChange","onChangeSearchCity","icon","inverted","circular","link","ToggleButtonGroup","handleChange","ToggleButton","Or","ButtonToolbar","handleChangePetAge","handleChangeCats","handleChangeDogs","handleChangeChildren","handleChangePetCoat","role","SearchBar","Navbar","s","Brand","Nav","Link","LandingPage","style","background","App","initialState","vistorCount","petAge","petEnvoriment","petReducer","action","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e0f50a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'semantic-ui-react'\n\n// const ageOptions = [\n//     { key: 'baby', text: 'Baby', value: 'baby' },\n//     { key: 'young', text: 'Young', value: 'young' },\n//     { key: 'adult', text: 'Adult', value: 'adult' },\n//     { key: 'Senior', text: 'Senior', value: 'senior' },\n\n\n// ]\n// export function DropdownExampleMultipleSelection() {\n//     return (<Dropdown placeholder='Age' fluid multiple selection options={ageOptions} />)\n// }\nclass Footer extends Component {\n\n\n\n\n\n    render() {\n        return (\n            <footer className=\"footer\">\n\n                {/* {DropdownExampleMultipleSelection()} */}\n\n            </footer>\n        )\n    }\n}\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ButtonToolbar, Button, ToggleButton, Collapse, ToggleButtonGroup, Container } from 'react-bootstrap/'\nimport { useState } from 'react';\n\nfunction Expand() {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <Container>\n            <Button\n                variant=\"secondary\" size=\"lg\"\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n            >\n                More\n            </Button>\n            <Collapse in={open}>\n                <div>\n                    Age\n                    {/* <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\">\n                            <ToggleButton value={'baby'}>baby</ToggleButton>\n                            <ToggleButton value={'young'}>young </ToggleButton>\n                            <ToggleButton value={'adult'}>adult</ToggleButton>\n                            <ToggleButton value={'senior'}>Senior</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar> */}\n                    Coat\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\" >\n                            <ToggleButton value={1}>Hairless</ToggleButton>\n                            <ToggleButton value={2}>Short </ToggleButton>\n                            <ToggleButton value={3}>Long</ToggleButton>\n                            <ToggleButton value={4}>Wire</ToggleButton>\n                            <ToggleButton value={4}>Curly</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                    Good with\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"checkbox\" >\n                            <ToggleButton value={1}>Children</ToggleButton>\n                            <ToggleButton value={2}>Dogs</ToggleButton>\n                            <ToggleButton value={3}>Cats</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                </div>\n            </Collapse>\n        </Container>\n    );\n}\n\nexport default Expand;","import React, { useEffect, useState } from 'react'\nimport GetData from './GetData'\nimport { Item } from 'semantic-ui-react'\nimport { Icon, Label } from 'semantic-ui-react'\nimport { Button } from 'semantic-ui-react'\nimport { Container, Row, Col } from 'react-bootstrap';\n\n// import { Image, Card, Icon } from 'semantic-ui-react'\n\n// import { Container, Row, Col } from 'react-bootstrap';\n\n// use react library 'card' to display each pet's breed, age, photo, \nfunction DisplayData(props) {\n    const { items } = props\n    const [photo, setPhoto] = useState([])\n\n    function DisplayPhoto(item) {\n        let dogPhoto = process.env.PUBLIC_URL + \"/imgs/goofyDog.jpeg\"\n        let catPhoto = process.env.PUBLIC_URL + \"/imgs/cat2.jpeg\"\n        let randoPhoto = process.env.PUBLIC_URL + \"/imgs/smilingDog.jpeg\"\n        if (item['photos'][0]) {\n            if (item['photos'][0]['full'] !== null) {\n                return item['photos'][0]['full']\n            }\n        } else {\n            if (item['species'] === 'Cat') {\n                return catPhoto\n            } else if (item['species'] === 'Dog') {\n                return dogPhoto\n            } else {\n                return randoPhoto\n            }\n\n        }\n    }\n    function DisplayName(itemName) {\n        if (itemName) {\n            if (itemName.includes('*')) {\n                let nameArr = [...itemName]\n                let newName = nameArr.filter((letter) => {\n                    if (letter === '*') {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n                return newName.join('')\n            } else {\n                return itemName\n            }\n        } else {\n            return itemName = 'This fur baby does not have a name yet'\n        }\n    }\n    function makeid(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n    //cats children \n    function tag(item) {\n        let tags = []\n        for (let speices in item['environment']) {\n\n            if (item['environment'][speices] !== null) {\n                if (item['environment'][speices] === true) {\n                    tags.push(<Label> {speices} friendly</Label>)\n                }\n            }\n        }\n        for (let attribute in item['attributes']) {\n            if (item['attributes'][attribute] !== null) {\n                if (item['attributes'][attribute] === true) {\n                    tags.push(<Label> {attribute} </Label>)\n                }\n            }\n        }\n        return tags\n\n    }\n    // function description(description) {\n    //     let str = '!@#$%^&*()?><./;{}|'\n    //     if (description.includes(...str)) {\n\n    //     }\n    // }\n\n    function getTimeDiff(dataTime) {\n        // let validMonth=false\n        //format= NOW year - Past Year    AND Now Month-Past Month +1 \n        let getToday = new Date()\n        let year = getToday.getFullYear() //return present year\n        // console.log(year, 'year')\n        let month = getToday.getUTCMonth(); //return present month \n        // console.log(month + 1, 'month')\n\n        let past = new Date(dataTime)\n        let pastYear = past.getFullYear()\n        let pastMonth = past.getUTCMonth()\n        if (month < pastMonth) {\n\n        }\n        let yearDiff = year - pastYear\n        let monthDiff = month - pastMonth + 1\n        if (monthDiff < 0) {\n            monthDiff *= -1\n        }\n\n        let result = yearDiff + ' Year and ' + monthDiff + ' Months'\n        return result\n\n    }\n\n    function getYear(dataTime) {\n        let d = new Date(dataTime)\n        return d.getFullYear()\n    }\n    useEffect(() => {\n\n        function mapItems() {\n            for (let i = 0; i < items.length; i++) {\n                let item = items[i]\n                console.log(item, '_______', item['photos'], item['photos'][0], 'lookie')\n\n\n            }\n        }\n        // console.log(DisplayName('**karen'))\n        mapItems()\n    }, [items])\n    // {\n    //     items.map(item => (\n    //         <li key={makeid(5)}>\n    //             {DisplayName(item.name)}: {item.type} | {item.breeds.primary}|\n    //             <Image src={DisplayPhoto(item)} size='small' circular />\n    //         </li>\n    //     ))\n    // }\n    function getColor(item) {\n        if (item['colors'] !== null) {\n            if (item['colors'][['primary']]) {\n                return item['colors']['primary']\n            }\n\n        } else {\n            return null\n        }\n    }\n    return (\n        <Container>\n            <Item.Group>\n                {items.map((item) => (\n                    <Item className=\"columnBox\">\n                        <Item.Image className=\"crop\" size='medium' src={DisplayPhoto(item)} wrapped ui={false} />\n                        <Item.Content>\n                            <Item.Header>{DisplayName(item.name)} </Item.Header>\n                            <Item.Meta>\n                                <Icon name='mail' />  {item['contact']['email']}\n                                <Icon name='phone' /> {item['contact']['phone']} </Item.Meta>\n                            <Item.Description>\n                                <Label>  <strong> Age:</strong> {item.age} </Label>\n                                <Label><strong> Gender: </strong>  {item.gender}</Label>\n                                <Label><strong>  Size: </strong>   {item.size}</Label>\n\n                                <br /> <div> {DisplayName(item.name)} is a {getColor(item)} {item.breeds.primary},our fury friend was admitted to the shelter since {getYear(item.published_at)} and has been in the shelter for {getTimeDiff(item.published_at)}\n                                </div>\n                            </Item.Description>\n                            <Item.Extra>  {tag(item)}</Item.Extra>\n                        </Item.Content>\n                        <Button className=\"detailsbtn\" href={item['url']}> Click for more details </Button>\n                    </Item>\n                ))}\n            </Item.Group>\n            {/* {items.map(item => (\n                <li key={makeid(5)}>\n                    {DisplayName(item.name)}: {item.type} | {item.breeds.primary}|\n                    <Image src={DisplayPhoto(item)} size='small' circular />\n                </li>\n            ))} */}\n            {/* {console.log(items, 'props')} */}\n        </Container>\n    )\n\n}\nexport default DisplayData;","import React from 'react'\nimport { store } from '../index'\nimport { Image } from 'semantic-ui-react'\nimport DisplayData from './DisplayData'\nimport Header from './Header'\n\n\nclass GetData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.token = '';\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n\n        };\n        store.subscribe(() => this.updateData())\n    }\n\n    updateData() {\n        const petState = store.getState()\n        this.setState({\n            items: petState.petData\n        })\n\n    }\n\n    render() {\n        let { isLoaded } = this.props;\n        let { items } = this.state;\n\n        items = items || [];\n\n        isLoaded = true;\n        if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div >\n                    <DisplayData items={items} />\n                </div>\n            );\n        }\n    }\n}\nexport default GetData; ","import React, { createRef, Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n// import { Form, FormControl } from 'react-bootstrap'\nimport { ButtonToolbar, ToggleButton, ToggleButtonGroup } from 'react-bootstrap/'\nimport Expand from './Expand.js';\nimport GetData from './GetData.js';\nimport { boundChangePetData, boundChangePetAge, boundChangePetEnvoriment } from '../Redux/actions'\nimport DisplayData from './DisplayData.js';\nimport { Icon, Input, Button, Form } from 'semantic-ui-react'\nimport {\n    Grid,\n    Rail,\n    Ref,\n    Segment,\n    Sticky,\n} from 'semantic-ui-react';\n\nconst domain = \"https://api.petfinder.com\";\nconst tokenUrl = '/v2/oauth2/token';\nconst url = `/v2/animals`;\n\nclass SearchTool extends Component {\n    contextRef = createRef()\n    constructor() {\n        super()\n        this.state = {\n            empty: '',\n            active: true,\n            petType: 'Dog',\n            page: 1,\n            location: '94112',\n            sort: '-recent',\n            coat: '',\n            age: '',\n            good_with_children: '',\n            good_with_dogs: '',\n            good_with_cats: '',\n            input: '',\n            hasError: false,\n            limit: '20'\n        }\n    }\n\n    handleToggle = () =>\n        this.setState((prevState) => ({ active: !prevState.active }))\n\n    async getToken() {\n        const response = await fetch(`${domain}${tokenUrl}`, {\n            body: \"grant_type=client_credentials&client_id=cx1Q1hP2mvR6jeG447cARka8URjwpWlyn6myKedV3w6ap3qy0v&client_secret=S0dclp9P1odBVYNRx9MrotL78XE0tAU4L57YCYH2\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            method: 'POST'\n        });\n        const jsonResponse = await response.json();\n        this.token = jsonResponse.access_token;\n    }\n\n    async requestData() {\n        const params = {\n            type: this.state.petType,\n            page: this.state.page,\n            location: this.state.location,\n            sort: this.state.sort,\n            age: this.state.age,\n            good_with_children: this.state.good_with_children,\n            good_with_dogs: this.state.good_with_dogs,\n            good_with_cats: this.state.good_with_cats,\n            coat: this.state.coat,\n            limit: this.state.limit\n        }\n        let queryString = ''\n        for (let param in params) {\n            if (params[param] !== '') {\n                queryString += (param + '=' + params[param] + '&')\n            }\n        }\n        const bearer = `Bearer ${this.token}`;\n        try {\n            //teach string interpolation \n            const res = await fetch(domain + url + '?' + queryString, {\n                withCredentials: true,\n                headers: {\n                    Authorization: bearer,\n                    'Content-Type': 'application/json'\n                }\n            });\n            const jsonRes = await res.json();\n\n            this.setState({\n                isLoaded: true,\n                items: jsonRes.animals\n            });\n            boundChangePetData(jsonRes.animals)\n            if (!jsonRes.animals.length) {\n                console.log('empty page')\n                this.setState({\n                    empty: 'Sorry! Looks like we ran out of furries in your area, Please check back for new furry updates!'\n                })\n            }\n            console.log(jsonRes, 'response')\n\n            // boundChangePetAge(jsonRes.animals)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    async handleChange(val) {\n        this.setState({\n            petType: val\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n    async handleChangePetAge(val) {\n        let newVal = this.state.age\n        if (this.state.age !== '') {\n            newVal = this.state.age + ',' + val\n        } else {\n            newVal = val\n        }\n        this.setState({\n            age: newVal\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n    async handleChangePetCoat(val) {\n        let newVal = this.state.coat\n        if (this.state.age !== '') {\n            newVal = this.state.coat + ' ,' + val\n        } else {\n            newVal = val\n        }\n\n        this.setState({\n            coat: newVal\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n\n    async handleChangeCats(val) {\n        if (this.state.good_with_cats === '') {\n            this.setState({\n                good_with_cats: true\n\n            });\n        }\n        if (this.state.good_with_cats === true) {\n            this.setState({\n                good_with_cats: false\n            });\n        }\n        if (this.state.good_with_cats === false) {\n            this.setState({\n                good_with_cats: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n\n        await this.getToken();\n        await this.requestData();\n    }\n    async handleChangeDogs(val) {\n\n        if (this.state.good_with_dogs === true) {\n            this.setState({\n                good_with_dogs: false\n            });\n        }\n        if (this.state.good_with_dogs === false) {\n            this.setState({\n                good_with_dogs: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n            console.log('did u happen')\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n        await this.getToken();\n        await this.requestData();\n    }\n    async handleChangeChildren(val) {\n\n        if (this.state.good_with_children === true) {\n            this.setState({\n                good_with_children: false\n            });\n        }\n        if (this.state.good_with_children === false) {\n            this.setState({\n                good_with_children: true\n            });\n        }\n        if (this.state.good_with_children === true && this.state.good_with_dogs === true && this.state.good_with_cats === true) {\n\n            this.setState({\n                good_with_children: true,\n                good_with_dogs: true,\n                good_with_cats: true\n            });\n        }\n        await this.getToken();\n        await this.requestData();\n    }\n    async onClickPageNext() {\n\n        this.setState({\n            page: this.state.page += 1\n\n        });\n        console.log(this.state.page, 'page')\n        await this.getToken();\n        await this.requestData();\n\n\n    }\n    async onClickPagePrev() {\n        if (this.state.page === 1) {\n            console.log('first Page')\n            return\n        }\n        this.setState({\n            page: this.state.page -= 1\n        });\n        await this.getToken();\n        await this.requestData();\n    }\n\n    onChangeSearchCity(e) {\n        console.log(e.target.value, 'look at me')\n        this.setState({\n            input: e.target.value\n\n        })\n        if (this.onSubmitSearchCity) {\n            e.target.value = ''\n        }\n    }\n    async onSubmitSearchCity(e, input) {\n        console.log(e, 'clicked')\n        e.preventDefault()\n\n        this.setState({\n            location: this.state.input,\n\n        })\n        this.setState({\n            input: ''\n        })\n\n\n        await this.getToken();\n        await this.requestData();\n\n    }\n\n    render() {\n        // const { active } = this.state\n\n        // if (this.state.hasError === true) {\n        //     return <div> fak </div>\n        // }\n\n\n        return (\n            <Container h-100>\n                <Grid >\n                    <Grid.Column columns={2}>\n                        <Ref innerRef={this.contextRef}>\n                            <Container >\n                                {/* <Segment position='right'> 'data goes here' */}\n                                <Container className=\"displayData mt-auto p-2\">\n                                    <Sticky className=\"stickyDirectionBar\" >\n                                        <Row className=\" justify-content-around\">\n                                            <Button className=\"directionbtn d-flex justify-content-start\" variant=\"warning\" offset='200' onClick={this.onClickPagePrev.bind(this)}> <Icon name='left arrow' /> Prev  </Button>\n                                            <Button className=\"directionbtn d-flex justify-content-end\" variant=\"warning\" onClick={this.onClickPageNext.bind(this)}> Next<Icon name='right arrow' /></Button>\n                                        </Row>\n                                    </Sticky>\n                                    <div>  {this.state.empty} </div>\n                                    <GetData className=\"displayData mt-auto p-2\" items={this.state.items} isLoaded={this.state.isLoaded}>\n                                    </GetData>\n                                </Container>\n                                <Rail >\n                                    <Sticky className=\"stickySearchBar\" >\n                                        <Segment className=\"positionSticky\">\n                                            <div> </div>\n                                            <Form onSubmit={this.onSubmitSearchCity.bind(this)}>\n                                                <Form.Field type=\"submit\">\n                                                    Zip code\n                                                    <Input\n                                                        placeholder='94112....'\n                                                        onChange={this.onChangeSearchCity.bind(this)}\n                                                        icon={<Icon name='search' inverted circular link onClick={this.onSubmitSearchCity.bind(this)} />}\n                                                    />\n                                                </Form.Field>\n                                            </Form>\n                                            <div> Pick your favorite furry </div>\n                                            <Button.Group>\n                                                <ToggleButtonGroup type=\"radio\" name=\"options\" onChange={this.handleChange.bind(this)}>\n                                                    <div> Species </div>\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'dog'}>Dog</ToggleButton>\n                                                    <Button.Or />\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'cat'}>Cat</ToggleButton>\n                                                    <Button.Or />\n                                                    <ToggleButton variant=\"secondary\" size='lg' className=\"speciesBtn\" value={'rabbit'}>Rabbit</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </Button.Group>\n                                            <div> Age </div>\n                                            <ButtonToolbar className=\"m-1\">\n                                                <ToggleButtonGroup type=\"checkbox\" onChange={this.handleChangePetAge.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'baby'}>baby</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'young'}>young </ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'adult'}>adult</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'senior'}>Senior</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            <div> Environment</div>\n                                            <ButtonToolbar className=\"m-1\">\n                                                <Button.Group type=\"checkbox\" >\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeCats.bind(this)} value={'good_with_cats'}>cats</Button>\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeDogs.bind(this)} value={'good_with_dogs'}>dogs </Button>\n                                                    <Button variant=\"secondary\" onClick={this.handleChangeChildren.bind(this)} value={'good_with_children'}>children</Button>\n                                                </Button.Group>\n                                            </ButtonToolbar>\n                                            <div> Coat length</div>\n                                            {/* <Container className=''> */}\n                                            <ButtonToolbar className=\" m-1\">\n                                                <ToggleButtonGroup className='wrapper' type=\"checkbox\" onChange={this.handleChangePetCoat.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'short'}>short</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'medium'}>medium </ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'long'}>long</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            <div> Coat type</div>\n                                            <ButtonToolbar className=\" m-1\">\n                                                <ToggleButtonGroup className='wrapper' type=\"checkbox\" onChange={this.handleChangePetCoat.bind(this)}>\n                                                    <ToggleButton variant=\"secondary\" value={'wire'}>wire</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'hairless'}>hairless</ToggleButton>\n                                                    <ToggleButton variant=\"secondary\" value={'curly'}>curly</ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </ButtonToolbar>\n                                            {/* </Container> */}\n                                            {/* <Checkbox\n                                                    checked={active}\n                                                    label='Activate Sticky on right'\n                                                    onChange={this.handleToggle}\n                                                    toggle\n                                                /> */}\n                                        </Segment>\n                                    </Sticky>\n                                </Rail>\n                            </Container>\n                        </Ref>\n                    </Grid.Column>\n                </Grid>\n\n                {/* <Col className=\"SearchToolBox col-2 float-left\"> */}\n\n\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                {/* <ButtonToolbar> */}\n\n\n                {/* </ButtonToolbar> */}\n\n                {/* <Expand /> */}\n                {/* <Button >\n                                    Search\n                    </Button> */}\n\n                {/* </Col> */}\n\n                {/* </Row> */}\n\n            </Container >\n        )\n    }\n}\nexport default SearchTool;","import { store } from '../index'\nimport { checkPropTypes } from 'prop-types';\n\n\n\nexport const type = 'PET_TYPE';\n\n//PETTYPE\n\nexport const changePetType = petType => ({\n    type: 'PET_TYPE',\n    petType,\n\n})\n\n\nexport const boundChangePetType = type => store.dispatch(changePetType(type))\n\n//PetData\n\nexport const changePetData = petData => ({\n    type: \"PET_DATA\",\n    petData\n})\n\nexport const boundChangePetData = petData =>\n    store.dispatch(changePetData(petData))\n\n//pet Age\nexport const changePetAge = petAge => ({\n    type: 'PET_AGE',\n    petAge,\n})\n\n\nexport const boundChangePetAge = petAge =>\n    store.dispatch(changePetAge(petAge))\n\n//envorinment \n\nexport const changePetEnvoriment = petEnvoriment => ({\n    type: 'PET_ENVIRONMENT',\n    petEnvoriment,\n})\n\nexport const boundChangePetEnvoriment = petEnvoriment =>\n    store.dispatch(changePetAge(petEnvoriment))\n\n\n\n\n\nexport const increaseCounter = () => ({\n    type: 'VISTOR_COUNT',\n})\n\n\n// export const boundCounter = () =>\n//     store.dispatch(increaseCounter())\n\n\n\n// export function boundChangePetType(type) {\n//     return { type: 'PET_TYPE' }\n// }\n\n\n\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SearchTool from './SearchTool.js';\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\n\n\n\n\nfunction Header() {\n    // const { items } = props\n    return (\n        <main role=\"main\" className=\"header h-100 landing Aligner\"\n\n        // `url(\"${process.env.PUBLIC_URL + '/imgs/Home.png'}\") no-repeat center / cover `\n        >\n            <SearchTool />\n\n        </main>\n\n    )\n}\n\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <nav className=\"greybackground\">\n                <Navbar className=\"navbar-default container d-flex flex-column flex-md-row justify-content-end\" s variant=\"dark\">\n                    {/* <img\n                        src={process.env.PUBLIC_URL + \"/imgs/logo2.png\"}\n                        className=\"logo\"\n                        width=\"55\"\n                        height=\"65\"\n                        alt=\"logo\"\n\n                    /> */}\n                    <Navbar.Brand className=\"background labelFont d-flex flex-column justify-content-start\"\n                    >Project Crateless</Navbar.Brand>\n                    <Nav className=\"navbar-collapse collapse justify-content-end\">\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#home\">Adopt</Nav.Link>\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#foster\">Foster</Nav.Link>\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#news\">News</Nav.Link>\n                        <Nav.Link className=\"nav-link nav-font\" href=\"#about\">About</Nav.Link>\n\n                    </Nav>\n                </Navbar>\n            </nav >\n        )\n    }\n\n}\nexport default SearchBar;","import React from 'react'\nimport { Container } from 'react-bootstrap/'\n\n\nexport default function LandingPage() {\n    return (\n        <hero>\n            <Container className=\"landing Aligner position-relative overflow-hidden text-center bg-light \" style={{\n                background: `url(\"${process.env.PUBLIC_URL + '/imgs/landing.png'}\") no-repeat center / cover `\n            }}>\n                <p className=\"Aligner-item col-md-8 col-lg-7\"  >\n                    Saving one pet won’t change the world,\n                    </p>  <p className=\"Aligner-item right row justify-content-center align-items-cente col-md-8\" >\n                    but for that one pet the world will change forever...\n                </p>\n                {/* <button className=\"w-50 landingbtn d-flex justify-content-center text-center mb-0 animate\"  > You can make their world a better place </button> */}\n            </Container>\n        </hero >\n    )\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport Footer from './components/Footer.js'\nimport Header from './components/Header.js'\nimport SearchBar from './components/SearchBar.js'\nimport LandingPage from './components/LandingPage';\n// import 'semantic-ui-css/semantic.min.css'\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <SearchBar />\n                <LandingPage />\n                <Header />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","\nconst initialState = {\n    petType: 'dog',\n    petData: [],\n    vistorCount: 0,\n    petAge: '',\n    petEnvoriment: ''\n}\n\n\n\n\nconst petReducer = (state, action) => {\n    if (typeof state === 'undefined') {\n        return initialState\n    }\n    switch (action.type) {\n        case 'PET_TYPE':\n            return {\n                ...state,\n                petType: action.petType\n            }\n        case 'PET_DATA':\n            return {\n                ...state,\n                petData: action.petData\n            }\n        case 'PET_AGE':\n            return {\n                ...state,\n                petAge: action.petAge\n            }\n        case 'PET_ENVIRONMENT':\n            return {\n                ...state,\n                petEnvoriment: action.petEnvoriment\n            }\n        case 'VISTOR_COUNT':\n            return {\n                ...state,\n                vistorCount: state.vistorCount + 1\n            }\n        default:\n            return state\n    }\n}\n\nexport default petReducer\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { changePetType, togglePetType, boundChangePetType } from './Redux/actions'\nimport petReducer from './Redux/reducers'\n\n\nexport const store = createStore(petReducer)\n\nconsole.log(store.getState())\n\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\n\n// store.getState()\n\n// unsubscribe()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}